package Java.Informatics;

import java.util.Scanner;

public class Task71 {
    /*–¶–∏–∫–ª–∏—á–µ—Å–∫–∏–π —Å–¥–≤–∏–≥ –≤–ø—Ä–∞–≤–æ

–ù–∞–ø–∏—à–∏—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É, –∫–æ—Ç–æ—Ä–∞—è —Ü–∏–∫–ª–∏—á–µ—Å–∫–∏ —Å–¥–≤–∏–≥–∞–µ—Ç —ç–ª–µ–º–µ–Ω—Ç—ã –º–∞—Å—Å–∏–≤–∞ –≤–ø—Ä–∞–≤–æ
(–Ω–∞–ø—Ä–∏–º–µ—Ä, –µ—Å–ª–∏ —ç–ª–µ–º–µ–Ω—Ç—ã –Ω—É–º–µ—Ä—É—é—Ç—Å—è, –Ω–∞—á–∏–Ω–∞—è —Å –Ω—É–ª—è, —Ç–æ 0-–π —ç–ª–µ–º–µ–Ω—Ç —Å—Ç–∞–Ω–æ–≤–∏—Ç—Å—è 1-–º,
1-–π —Å—Ç–∞–Ω–æ–≤–∏—Ç—Å—è 2-–º, ..., –ø–æ—Å–ª–µ–¥–Ω–∏–π —Å—Ç–∞–Ω–æ–≤–∏—Ç—Å—è 0-–º,
—Ç–æ –µ—Å—Ç—å –º–∞—Å—Å–∏–≤ {3, 5, 7, 9} –ø—Ä–µ–≤—Ä–∞—â–∞–µ—Ç—Å—è –≤ –º–∞—Å—Å–∏–≤ {9, 3, 5, 7}).

–í—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
–°–Ω–∞—á–∞–ª–∞ –∑–∞–¥–∞–Ω–æ —á–∏—Å–ª–æ ùëÅ ‚Äî –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –≤ –º–∞—Å—Å–∏–≤–µ (1‚â§ùëÅ‚â§35).
–î–∞–ª–µ–µ —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª –∑–∞–ø–∏—Å–∞–Ω—ã ùëÅ —á–∏—Å–µ–ª ‚Äî —ç–ª–µ–º–µ–Ω—Ç—ã –º–∞—Å—Å–∏–≤–∞.
–ú–∞—Å—Å–∏–≤ —Å–æ—Å—Ç–æ–∏—Ç –∏–∑ —Ü–µ–ª—ã—Ö —á–∏—Å–µ–ª.

–í—ã—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
–ù–µ–æ–±—Ö–æ–¥–∏–º–æ –≤—ã–≤–µ—Å—Ç–∏ –º–∞—Å—Å–∏–≤, –ø–æ–ª—É—á–µ–Ω–Ω—ã–π –ø–æ—Å–ª–µ —Å–¥–≤–∏–≥–∞ —ç–ª–µ–º–µ–Ω—Ç–æ–≤.

–ü—Ä–∏–º–µ—Ä—ã
–í—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
6
4 5 3 4 2 3
–í—ã—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
3 4 5 3 4 2
     */
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        // Step 1: Read number of elements
        int n = sc.nextInt();
        int[] arr = new int[n];

        // Step 2: Read array elements
        for (int i = 0; i < n; i++) {
            arr[i] = sc.nextInt();
        }

        // Step 3: Perform right cyclic shift
        int last = arr[n - 1]; // Save last element

        // Shift all elements one step to the right
        for (int i = n - 1; i > 0; i--) {
            arr[i] = arr[i - 1];
        }
        arr[0] = last; // Put last element at the start

        // Step 4: Print the result
        for (int i = 0; i < n; i++) {
            System.out.print(arr[i] + " ");
        }
        sc.close();
    }
}


